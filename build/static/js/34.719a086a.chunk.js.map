{"version":3,"sources":["views/app-views/main/scheduler/index.js"],"names":["ArrayObject","title","arrayObj","id","img","x","y","rotation","width","height","Scheduler","activeTab","setActiveTab","useState","droppedItems","setDroppedItems","selectedItem","setSelectedItem","web","setWeb","handleDragStart","e","item","isDroppedItem","arguments","length","undefined","rect","target","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","dataTransfer","setData","JSON","stringify","handleUpdateItem","field","value","prevItems","map","_jsx","className","children","_jsxs","Row","gutter","Col","xs","sm","md","lg","Card","Tabs","defaultActiveKey","onChange","key","Number","items","tab","index","toString","label","style","display","overflowX","gap","padding","draggable","onDragStart","textAlign","src","alt","cursor","marginTop","Form","layout","Flex","Item","InputNumber","justifyContent","Button","type","icon","SaveOutlined","onClick","handleExport","dataStr","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","handleDeleteItem","filter","disabled","DeleteOutlined","Upload","beforeUpload","file","reader","FileReader","onload","data","parse","result","message","success","error","readAsText","showUploadList","UploadOutlined","color","extra","alignItems","marginRight","Switch","size","checked","position","backgroundColor","onDragOver","preventDefault","onDrop","getData","currentTarget","prevItem","backgroundSize","backgroundImage","handleSelectItem","transform","border"],"mappings":"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","file":"static/js/34.719a086a.chunk.js","sourcesContent":["import { Card, Tabs, Row, Col, Button, Form, InputNumber, Switch, message, Upload} from 'antd';\nimport Flex from 'components/shared-components/Flex';\nimport { useState } from 'react';\nimport { DeleteOutlined, UploadOutlined, SaveOutlined } from '@ant-design/icons';\n\n\n\n\n\n\nconst ArrayObject = [\n    {\n        title: \"Новые столы\",\n        arrayObj: [\n            { id: 1, title: 'Стол на 2 места',img: 'https://i.postimg.cc/85kpn5N2/table2.png', x: 0, y: 0, rotation: 0, width: 80, height: 80 },\n            { id: 2, title: 'Стола на 5 мест', img: 'https://i.postimg.cc/fb9qnjTX/table5.png', x: 0, y: 0, rotation: 0, width: 80, height: 80 },\n            { id: 3, title: 'Стол на 6 мест', img: 'https://i.postimg.cc/X7BVPt6Y/table6.png', x: 0, y: 0, rotation: 0, width: 80, height: 80 },\n            { id: 4, title: 'Стул', img: 'https://i.postimg.cc/wMGjNpKS/chair.png', x: 0, y: 0, rotation: 0, width: 80, height: 80},\n\n        ],\n    }, \n    {\n        title: \"Новые элементы\",\n        arrayObj: [\n            { id: 1, title: 'Зона 3 места', img: 'https://i.postimg.cc/8zrmjkQg/zona-for-3.png', x: 0, y: 0, rotation: 0, width: 80, height: 80 },\n            { id: 2, title: 'Зона 4 места', img: 'https://i.postimg.cc/LsKBfd2Y/zona-for-4.png', x: 0, y: 0, rotation: 0, width: 80, height: 80 }\n        ],\n    },\n    {\n        title: \"Custom\",\n        arrayObj: [\n            { id: 1, title: 'Стул', img: 'https://i.postimg.cc/wMGjNpKS/chair.png', x: 0, y: 0, rotation: 0, width: 80, height: 80},\n\n        ],\n    },\n    {\n        title: \"Места\",\n        arrayObj: [\n            {}\n        ]\n    },\n    {\n        title: \"Прочее\",\n        arrayObj: [\n            {}\n        ]\n    }\n];\n\nconst Scheduler = () => {\n    const [activeTab, setActiveTab] = useState(0);\n    const [droppedItems, setDroppedItems] = useState([]);\n    const [selectedItem, setSelectedItem] = useState(null); \n    const [web, setWeb] = useState(false)\n\n    const handleDragStart = (e, item, isDroppedItem = false) => {\n\n        const rect = e.target.getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n\n\n        e.dataTransfer.setData('text/plain', JSON.stringify({\n            ...item,\n            offsetX,\n            offsetY,\n            isDroppedItem,\n        }));\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        const data = JSON.parse(e.dataTransfer.getData('text/plain'));\n        const { offsetX, offsetY, isDroppedItem, ...item } = data;\n        const rect = e.currentTarget.getBoundingClientRect();\n    \n        let x = e.clientX - rect.left - offsetX;\n        let y = e.clientY - rect.top - offsetY;\n    \n        if (y < 50) { y = 50; }\n    \n        if (isDroppedItem) {\n            setDroppedItems((prevItems) =>\n                prevItems.map((prevItem) =>\n                    prevItem.id === item.id ? { ...prevItem, x, y } : prevItem\n                )\n            );\n        } else {\n            setDroppedItems((prevItems) => [\n                ...prevItems,\n                {\n                    ...item,\n                    x,\n                    y,\n                    rotation: 0,\n                    width: item.width,\n                    height: item.height\n                },\n            ]);\n        }\n    };\n\n    const handleSelectItem = (item) => {\n        setSelectedItem(item); \n    };\n\n    const handleDeleteItem = () => {\n        if (selectedItem) {\n            setDroppedItems((prevItems) =>\n                prevItems.filter((item) => item.id !== selectedItem.id)\n            );\n            setSelectedItem(null);\n        }\n    };\n\n    const handleUpdateItem = (field, value) => {\n        if (selectedItem) {\n            setDroppedItems((prevItems) =>\n                prevItems.map((item) =>\n                    item.id === selectedItem.id ? { ...item, [field]: value } : item\n                )\n            );\n        }\n    };\n\n    const handleExport = () => {\n        const dataStr = JSON.stringify(droppedItems, null, 2);\n        const blob = new Blob([dataStr], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'layout.json';\n        link.click();\n        URL.revokeObjectURL(url);\n    };\n\n    const handleImport = (file) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const data = JSON.parse(e.target.result);\n                setDroppedItems(data);\n                message.success('Расстановка успешно загружена!');\n            } catch (error) {\n                message.error('Ошибка при загрузке файла');\n            }\n        };\n        reader.readAsText(file);\n        return false; \n    };\n    \n\n    return (\n        <div className=\"\">\n            <Row gutter={16}>\n                {/* карточка с объектами */}\n                <Col xs={24} sm={24} md={8} lg={10}>\n                    <Card>\n                        <Tabs \n                            defaultActiveKey=\"0\" \n                            onChange={(key) => setActiveTab(Number(key))}\n                            items={ArrayObject.map((tab, index) => ({\n                                key: index.toString(),\n                                label: tab.title,\n                            }))} />\n                            <div style={{ display: \"flex\", overflowX: \"auto\", gap: 16, padding: 10 }}>\n                                {ArrayObject[activeTab].arrayObj.map((item) => (\n                                    <div\n                                        key={item.id}\n                                        draggable\n                                        onDragStart={(e) => handleDragStart(e, item)}\n                                        style={{ textAlign: \"center\" }}\n                                    >\n                                        <img\n                                            src={item.img}\n                                            alt={item.title}\n                                            style={{ cursor: 'pointer', width: 80, height: 80 }}\n                                        />\n                                        <div>{item.title}</div>\n                                    </div>\n                                ))}\n                            </div>\n                    </Card>\n\n                    {/* карточка с параметрами */}\n                    <Card title=\"Параметры элемента\" style={{ marginTop: 16 }}>\n                        <Form layout=\"horizontal\">\n                            <Flex gap={16}>\n                                <Form.Item label=\"X\">\n                                    <InputNumber style={{ width: 50 }} value={selectedItem?.x} onChange={(value) => handleUpdateItem('x', value)}/>\n                                </Form.Item>\n                                <Form.Item label=\"Y\">\n                                    <InputNumber style={{ width: 50 }} value={selectedItem?.y} onChange={(value) => handleUpdateItem('y', value)} />\n                                </Form.Item>\n                                <Form.Item label=\"Угол\">\n                                    <InputNumber style={{ width: 50 }} value={selectedItem?.rotation} onChange={(value) => handleUpdateItem('rotation', value)}/>\n                                </Form.Item>\n                                <Form.Item label=\"Высота\">\n                                    <InputNumber style={{ width: 50 }} value={selectedItem?.height} onChange={(value) => handleUpdateItem('height', value)} />\n                                </Form.Item>\n                                <Form.Item label=\"Ширина\">\n                                    <InputNumber style={{ width: 50 }}  value={selectedItem?.width} onChange={(value) => handleUpdateItem('width', value)} />\n                                </Form.Item>\n                                <Form.Item label=\"Слой\">\n                                    <InputNumber style={{ width: 50 }} />\n                                </Form.Item>\n                            </Flex>\n                        </Form>\n                    </Card>\n                {/* Группа кнопок */}\n                    <Card style={{ marginTop: 16 }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"16px\" }}>\n                            <Button type=\"primary\" icon={<SaveOutlined />} onClick={handleExport}>\n                                Сохранить\n                            </Button>\n                            <Button \n                            onClick={() => setDroppedItems([])}\n                            type=\"danger\">\n                                Удалить все\n                            </Button>\n                            <Button\n                                onClick={handleDeleteItem}\n                                disabled={!selectedItem}\n                                icon={<DeleteOutlined />}> \n                                Удалить элемент\n                                </Button>\n                        </div>\n                    </Card>\n                    <Upload beforeUpload={handleImport} showUploadList={false}>\n                         <Button icon={<UploadOutlined />}>Загрузить</Button>\n                    </Upload>\n                </Col>\n                {/* Карта заведения */}\n                <Col xs={24} sm={24} md={16} lg={14}>\n                    <Card\n                        title={<span style={{ color: \"white\" }}>Карта заведения</span>}\n                        extra={\n                            <Flex alignItems=\"center\" gap={8}>\n                                <span style={{ color: \"white\", marginRight: 10 }}>Сетка</span>\n                                <Switch size=\"large\" checked={web} onChange={setWeb} />\n                            </Flex>\n                        }\n                        style={{\n                            height: \"120%\",\n                            position: \"relative\",\n                            backgroundColor: \"black\",\n                            color: \"white\",\n                        }}\n                        onDragOver={handleDragOver}\n                        onDrop={handleDrop} >\n\n                        {web && (\n                            <div style={{\n                                 position: \"absolute\",\n                                 top: 50,\n                                 left: 0,\n                                 width: \"100%\",\n                                 height: \"95%\",\n                                 backgroundSize: \"30px 30px\",\n                                 backgroundImage:\n                                    \"linear-gradient(to right, rgba(255,255,255,0.1) 1px, transparent 1px), \" +\n                                    \"linear-gradient(to bottom, rgba(255,255,255,0.1) 1px, transparent 1px)\",\n                                }}\n                            />\n                        )}\n\n                        {droppedItems.map((item, index) => (\n                            <img\n                                key={index}\n                                src={item.img}\n                                alt={item.title}\n                                onClick={() => handleSelectItem(item)}\n                                onDragStart={(e) => handleDragStart(e, item, true)}\n                                draggable\n                                style={{\n                                    position: \"absolute\",\n                                    left: item.x,\n                                    top: item.y,\n                                    width: item.width,\n                                    height: item.height,\n                                    transform: `rotate(${item.rotation}deg)`,  \n                                    border: selectedItem?.id === item.id ? '2px solid blue' : 'none',\n                                    cursor: 'pointer'\n                                }}\n                            />\n                        ))}\n                    </Card>\n                </Col>\n\n            </Row>\n        </div>\n    );\n};\n\nexport default Scheduler;\n"],"sourceRoot":""}